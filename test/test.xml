<?xml version="1.0" encoding="UTF-8" ?>
<project name="PhingTaskTest" description="Testing Phing Tasks" default="default" basedir=".">

    <target name="default">
        <fail msg="Use one of the other targets!" />
    </target>

    <resolvepath propertyName="dir.strivex-phing" file="./strivex-phing" />
    <resolvepath propertyName="dir.strivex-phing.classpath" file="${dir.strivex-phing}/vendor" />
    <resolvepath propertyName="dir.strivex-phing.classpathref" file="${dir.strivex-phing}/vendor/autoload.php" />

    <includepath classpath="${dir.strivex-phing.classpath}" />
    <taskdef
            name="lowercase"
            classname="Strivex\Phing\Task\String\ToLowerCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>
    <taskdef
            name="uppercase"
            classname="Strivex\Phing\Task\String\ToUpperCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>
    <taskdef
            name="pascalcase"
            classname="Strivex\Phing\Task\String\ToPascalCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>
    <taskdef
            name="camelcase"
            classname="Strivex\Phing\Task\String\ToCamelCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>
    <taskdef
            name="snakecase"
            classname="Strivex\Phing\Task\String\ToSnakeCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>
    <taskdef
            name="kebabcase"
            classname="Strivex\Phing\Task\String\ToKebabCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>

    <taskdef
            name="stringcase"
            classname="Strivex\Phing\Task\String\StringCaseTask"
            classpathref="${dir.strivex-phing.classpathref}"/>

    <taskdef
            name="jsonedit"
            classname="Strivex\Phing\Task\Json\JsonEditTask"
            classpathref="${dir.strivex-phing.classpathref}"/>

    <target name="Test String Stuff">
        <property name="test.text.example1" value="Some Big Words" />
        <lowercase input="${test.text.example1}" propertyName="test.text.example1.lowercase" />
        <uppercase input="${test.text.example1}" propertyName="test.text.example1.uppercase" />
        <pascalcase input="${test.text.example1}" propertyName="test.text.example1.pascalcase" />
        <camelcase input="${test.text.example1}" propertyName="test.text.example1.camelcase" />
        <snakecase input="${test.text.example1}" propertyName="test.text.example1.snakecase" />
        <kebabcase input="${test.text.example1}" propertyName="test.text.example1.kebabcase" />

        <property name="test.text.example2" value="AnotherWayOfInput" />
        <lowercase input="${test.text.example2}" propertyName="test.text.example2.lowercase" />
        <uppercase input="${test.text.example2}" propertyName="test.text.example2.uppercase" />
        <pascalcase input="${test.text.example2}" propertyName="test.text.example2.pascalcase" />
        <camelcase input="${test.text.example2}" propertyName="test.text.example2.camelcase" />
        <snakecase input="${test.text.example2}" propertyName="test.text.example2.snakecase" />
        <kebabcase input="${test.text.example2}" propertyName="test.text.example2.kebabcase" />

        <property name="test.text.example3" value="We/have/something/like-this"/>
        <lowercase input="${test.text.example3}" propertyName="test.text.example3.lowercase" />
        <uppercase input="${test.text.example3}" propertyName="test.text.example3.uppercase" />
        <pascalcase input="${test.text.example3}" propertyName="test.text.example3.pascalcase" />
        <camelcase input="${test.text.example3}" propertyName="test.text.example3.camelcase" />
        <snakecase input="${test.text.example3}" propertyName="test.text.example3.snakecase" />
        <kebabcase input="${test.text.example3}" propertyName="test.text.example3.kebabcase" />

        <property name="test.text.example4" value="We/have/something/like-this"/>
        <lowercase input="${test.text.example4}" propertyName="test.text.example4.lowercase" />
        <uppercase input="${test.text.example4}" propertyName="test.text.example4.uppercase" />
        <pascalcase input="${test.text.example4}" propertyName="test.text.example4.pascalcase" leaveSlashes="true" delimiter="/" />
        <camelcase input="${test.text.example4}" propertyName="test.text.example4.camelcase" leaveSlashes="true" delimiter="/" />
        <snakecase input="${test.text.example4}" propertyName="test.text.example4.snakecase" leaveSlashes="true" delimiter="/" />
        <kebabcase input="${test.text.example4}" propertyName="test.text.example4.kebabcase" leaveSlashes="true" delimiter="/" />

        <stringcase input="En werkt dit ook?" propertyName="test.text.example5">
            <lowercase />
            <uppercase propertyName="test.text.example6" />
            <pascalcase />
            <camelcase />
            <snakecase />
            <kebabcase />
        </stringcase>

        <stringcase input="En werkt dit ook?">
            <lowercase />
            <uppercase propertyName="test.text.example7" />
            <pascalcase propertyName="test.text.example8"/>
            <camelcase />
            <snakecase />
            <kebabcase />
        </stringcase>

        <echoproperties regex="/test\.text\.example/"/>

    </target>

    <target name="Test JSON Stuff">

        <jsonedit file="./test.json">
            <add key="test.test" value="okidoki" overwrite="false" />
            <delete key="test.bla" />
            <add key="bla.foo.huh" value="berepoot" />
            <add key="bla.foo.bla" value="asdasd" />
            <add key="blabla" value="{&quot;key&quot;:&quot;value&quot;}" />
            <get key="name" propertyName="zzz.name" />
            <bumpversion key="version" type="RC" overwrite="true" />
        </jsonedit>

        <echoproperties />
    </target>
</project>